//AHMAD IBRAHIM
// I used the button example and the fade example in the arduino example library and merged them together 
// to create a single fade in and out after pressing the button.

//BUTTON EXAMPLE************************************************************************************** 
 //created 2005
// by DojoDave <http://www.0j0.org>
// modified 30 Aug 2011
 //by Tom Igoe

 //This example code is in the public domain.

// http://www.arduino.cc/en/Tutorial/Button
 */
//FADING EXAMPLE************************************************************************************** 
//Created 1 Nov 2008
 //By David A. Mellis
 //modified 30 Aug 2011
 //By Tom Igoe

// http://www.arduino.cc/en/Tutorial/Fading

// This example code is in the public domain.

 */

// constants won't change. They're used here to
// set pin numbers:
const int buttonPin = 13;     // the number of the pushbutton pin
const int ledPin =  9;      // the number of the LED pin

// variables will change:
int buttonState = 0;         // variable for reading the pushbutton status

void setup() {
  // initialize the LED pin as an output:
  pinMode(ledPin, OUTPUT);
  // initialize the pushbutton pin as an input:
  pinMode(buttonPin, INPUT);
}

void loop() {
  // read the state of the pushbutton value:
  buttonState = digitalRead(buttonPin);

  // check if the pushbutton is pressed.
  // if it is, the buttonState is LOW:
  if (buttonState == LOW) {

  for (int fadeValue = 0 ; fadeValue <= 255; fadeValue += 5) {
    // sets the value (range from 0 to 255):
    analogWrite(ledPin, fadeValue);
    // wait for 30 milliseconds to see the dimming effect
    delay(30);
  }

    for (int fadeValue = 255 ; fadeValue >= 0; fadeValue -= 5) {
    // sets the value (range from 0 to 255):
    analogWrite(ledPin, fadeValue);
    // wait for 30 milliseconds to see the dimming effect
    delay(30);
  }
    // turn LED on:
 
  } else { // when button's state is not HIGH run this loop

analogWrite(ledPin, 0);

  }
}
